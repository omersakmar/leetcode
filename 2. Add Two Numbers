/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
  let List = new ListNode(0);
  let head = List;
  let sum = 0;
  let carry = 0;

  while (l1 !== null || l2 !== null) {
    sum = carry;

    if (l1 !== null) {
      sum += l1.val;
      l1 = l1.next;
    }

    if (l2 !== null) {
      sum += l2.val;
      l2 = l2.next;
    }

    carry = Math.floor(sum / 10);
    sum = sum % 10;

    head.next = new ListNode(sum);
    head = head.next;
  }

  if (carry > 0) {
    head.next = new ListNode(carry);
  }

  return List.next;
};
